#define INC_PIN 2
#define UD_PIN 3
#define CS_PIN 4

const int analogPin = A0;
const int numSamples = 50;
const int trimCount = 5;
const int maxSteps = 19;

void setup() {
  pinMode(INC_PIN, OUTPUT);
  pinMode(UD_PIN, OUTPUT);
  pinMode(CS_PIN, OUTPUT);

  digitalWrite(CS_PIN, HIGH);
  digitalWrite(INC_PIN, HIGH);
  digitalWrite(UD_PIN, HIGH);

  Serial.begin(9600);
  resetDigipot();

  // Sweep up once
  digitalWrite(UD_PIN, HIGH);
  digitalWrite(CS_PIN, LOW);
  for (int i = 0; i < maxSteps; i++) {
    pulseINC();
    delay(10);
    float voltage = readAveragedVoltage();
    Serial.println(voltage, 3);
    delay(5000);
  }
  digitalWrite(CS_PIN, HIGH);
}

void loop() {
  // Do nothing after one sweep
}

void pulseINC() {
  digitalWrite(INC_PIN, LOW);
  delayMicroseconds(5);
  digitalWrite(INC_PIN, HIGH);
  delayMicroseconds(5);
}

void resetDigipot() {
  digitalWrite(CS_PIN, LOW);
  digitalWrite(UD_PIN, LOW);
  for (int i = 0; i < 100; i++) {
    pulseINC();
  }
  digitalWrite(CS_PIN, HIGH);
}

float readAveragedVoltage() {
  int samples[numSamples];
  for (int i = 0; i < numSamples; i++) {
    samples[i] = analogRead(analogPin);
    delay(2);
  }

  for (int i = 0; i < numSamples - 1; i++) {
    for (int j = 0; j < numSamples - i - 1; j++) {
      if (samples[j] > samples[j + 1]) {
        int temp = samples[j];
        samples[j] = samples[j + 1];
        samples[j + 1] = temp;
      }
    }
  }

  long sum = 0;
  for (int i = trimCount; i < numSamples - trimCount; i++) {
    sum += samples[i];
  }

  float average = sum / float(numSamples - 2 * trimCount);
  return average * (5.0 / 1023.0);
}
